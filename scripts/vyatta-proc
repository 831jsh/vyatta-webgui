
export VYATTA_ACTIVE_CONFIGURATION_DIR=/opt/vyatta/config/active

declare vyatta_proc_templates='/opt/vyatta/share/vyatta-proc/templates/'


declare -r _vyatta_proc_last_comp_init='>>>>>>LASTCOMP<<<<<<'
declare _vyatta_proc_last_comp=${_vyatta_proc_last_comp_init}

#sets the alias hooks for the cmds
_vyatta_proc_init ()
{
    complete -F _vyatta_proc_expand ''

    for xd in $vyatta_proc_templates/* ; do
        if [ -d $xd ] ; then
            cmd=${xd##*/}
            complete -F _vyatta_proc_expand $cmd
            eval alias $cmd=\'_vyatta_proc_run $cmd\'
        fi
    done

    bind 'set show-all-if-ambiguous on'
    shopt -s histverify
}


#parsing the node.def cmd
_vyatta_proc_get_node_def_field ()
{
    local file=$1 field=$2

    sed -n '/^'"$field"':/,$ {
# strip field name and hold rest of line
    s/[a-z]*: *//
    h
    :b
# at EOF, print hold buffer and quit
    $ { x; p; q }
# input next line
    n
# if start of another field def, print hold buf and quit
    /^[a-z]*:/ { x; p; q }
# add to hold buf and branch to input next line
    H
    bb
    }' $file
}

#main run
_vyatta_proc_run ()
{
    local -i estat
    local tpath=$vyatta_proc_templates
    local restore_shopts=$( shopt -p extglob nullglob | tr \\n \; )
    shopt -s extglob nullglob

    _vyatta_proc_last_comp=${_vyatta_proc_last_comp_init}
    false; estat=$?
    for arg ; do
        if [ -f "$tpath/$arg/node.def" ] ; then
            tpath+=/$arg
        elif [ -f $tpath/node.tag/node.def ] ; then
            tpath+=/node.tag
        else
            echo "Invalid command" >&2
            eval $restore_shopts
            return 1
        fi
    done
    local run_cmd=$(_vyatta_proc_get_node_def_field $tpath/node.def run)
    local ret=0
    if [ -n "$run_cmd" ]; then
        eval "$run_cmd"
    else
        echo "Incomplete command" >&2
        ret=1
    fi
    eval $restore_shopts
    return $ret
}

_vyatta_proc_init $@
