#!/bin/bash

OP=$1
shift
VM_NAME=$1
shift
VM_VERSION=$1
shift
TIME=$1

IMG_HOME=/home/vmdeploy
LOG=$IMG_HOME/.deploy.log

VFILE="$IMG_HOME/.V_$VM_NAME"
JFILE="$IMG_HOME/.J_$VM_NAME"

lecho ()
{
  t=$(date +"%F %H:%M:%S")
  s="$t $*"
  sudo sh -c "echo '$s' >>$LOG"
}

if ! sudo mkdir $IMG_HOME/.deploy-op >&/dev/null; then
  # deployment op in progress
  lecho "Failed: deployment operation is in progress"
  exit 1 
fi

exit_fail ()
{
  lecho $*
  lecho Deployment operation failed
  sudo rm -rf $IMG_HOME/.deploy-op
  exit 1
}

exit_succeed ()
{
  lecho Deployment operation succeeded
  sudo rm -rf $IMG_HOME/.deploy-op
  exit 0
}

if [ ! -r "$VFILE" ]; then
  exit_fail "Invalid name \"$VM_NAME\""
fi

if [ "$OP" == "schedule" ]; then
  IMG=$IMG_HOME/"$VM_NAME"_"$VM_VERSION".tar
  if [ ! -r "$IMG" ]; then
    exit_fail "Invalid version \"$VM_VERSION\" for \"$VM_NAME\""
  fi
  CVER=$(cat "$VFILE")
  if [ "$CVER" == "$VM_VERSION" ]; then
    exit_fail "\"$VM_NAME\" is already at \"$VM_VERSION\""
  fi
  if [ -r "$JFILE" ]; then
    exit_fail "\"$VM_NAME\" is already scheduled for deployment"
  fi
  CMD="/opt/vyatta/sbin/vyatta-vmdeploy \"$VM_NAME\" \"$VM_VERSION\""
  AT_OUT=$(echo "$CMD" | sudo at "$TIME" 2>&1 | grep -v warning)
  re='^job ([0-9]+) at ([^ ]+ [^ ]+ [0-9]+ [^ ]+ [0-9]+)$'
  if ! [[ $AT_OUT =~ $re ]]; then
    exit_fail "Failed to schedule \"$VM_NAME $VM_VERSION\" deployment"
  fi
  JOB=${BASH_REMATCH[1]}
  DT=${BASH_REMATCH[2]}
  TIME=$(date -d "$DT" +"%H:%M %d.%m.%y")
  sudo sh -c "echo \"$JOB $VM_VERSION $TIME\" >$JFILE"
  lecho "Deployment of \"$VM_NAME $VM_VERSION\" scheduled at \"$TIME\""
  exit_succeed
elif [ "$OP" == "cancel" ]; then
  if [ ! -r "$JFILE" ]; then
    exit_fail "\"$VM_NAME\" is not scheduled for deployment"
  fi
  job=$(cat $JFILE | (read j v t ; echo $j))
  if ! sudo atrm "$job"; then
    exit_fail "Failed to cancel scheduled \"$VM_NAME\" deployment"
  fi
  sudo rm -f $JFILE
  lecho "\"$VM_NAME\" deployment cancelled"
  exit_succeed
fi

# invalid op
exit_fail "Invalid operation"

