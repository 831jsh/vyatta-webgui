#!/bin/bash

prefix=/opt/vyatta
ldapconfdir=$prefix/etc/ldap
CHUNKER_DIR=/usr/lib/cgi-bin/tmp/webgui
CHUNKER_INIT_DIR=/usr/lib/cgi-bin/etc/init.d
CHUNKER_PID_DIR=/usr/lib/cgi-bin/var/run

# create chunker temp directory
mkdir -p $CHUNKER_DIR
chmod 0777 $CHUNKER_DIR
touch ${CHUNKER_DIR}/dummy

#create chunker proc directory
mkdir -p $CHUNKER_INIT_DIR
chmod 0755 $CHUNKER_INIT_DIR
touch ${CHUNKER_INIT_DIR}/dummy

#create chunker pid directory
mkdir -p $CHUNKER_PID_DIR
chmod 0777 $CHUNKER_PID_DIR
touch ${CHUNKER_PID_DIR}/dummy

# enable CGI for lighttpd
ln -sf /etc/lighttpd/conf-available/10-cgi.conf /etc/lighttpd/conf-enabled/

# enable https
ln -sf /etc/lighttpd/conf-available/10-ssl.conf /etc/lighttpd/conf-enabled/

# fix debian cgi config file
cgi_conf=/etc/lighttpd/conf-enabled/10-cgi.conf
sed -i '/^\$HTTP.*127\.0\.0\.1/,/^}$/{s/^\(.*\)$/# \1/}' $cgi_conf
if ! grep -q '^alias.url' $cgi_conf; then 
  echo 'alias.url += ( "/cgi-bin/" => "/usr/lib/cgi-bin/" )' >>$cgi_conf
fi

# allow index.cgi
if ! grep -q 'HTTP.*"/\$"' $cgi_conf; then
cat <<'EOF' >>$cgi_conf
$HTTP["url"] =~ "/$" {
  dir-listing.activate = "disable"
  cgi.assign = ( ".cgi" => "" )
}
EOF
fi

# update crontab
crontab_conf=/etc/crontab
if ! grep -q 'upgrade_check.pl' $crontab_conf; then
    echo '*/10 * * * * root /opt/vyatta/sbin/upgrade_check.pl >&/dev/null' >> $crontab_conf
    /etc/init.d/cron restart
fi

# enable index.cgi
if ! grep -q '^index-file.names.*index.cgi' /etc/lighttpd/lighttpd.conf; then
  sed -i '/^index-file.names/{s/"index.php"/"index.cgi", "index.php"/}' \
    /etc/lighttpd/lighttpd.conf
fi

# enable mod_redirect
if grep -q '^#.*mod_redirect' /etc/lighttpd/lighttpd.conf; then
  sed -i 's/^#\(.*mod_redirect.*\)$/ \1/' /etc/lighttpd/lighttpd.conf
fi

# redirect http to https
if ! grep -q '^# redirect all http to https$' /etc/lighttpd/lighttpd.conf; then
  cat <<'EOF' >>/etc/lighttpd/lighttpd.conf

# redirect all http to https
$HTTP["scheme"] == "http" {
  $HTTP["host"] =~ "^(.*)$" {
    url.redirect = (
      "^(.*)$" => "https://%1$1"
    )
  }
}
EOF
fi

# enable mod_proxy
cat <<EOF >/etc/lighttpd/conf-enabled/10-proxy.conf
server.modules += ( "mod_proxy" )
EOF

# XXX webgui needs suid for now
chmod u+s /usr/lib/cgi-bin/webgui

# XXX www-data user needs to be in these groups for now
for g in adm sudo users quaggavty vyattacfg operator; do
  adduser www-data $g >&/dev/null
done

# remove init links
update-rc.d -f lighttpd remove

# need customized sudoers
sed -i '/^# BEGIN OA ENTRIES/,/^# END OA ENTRIES/{d}' /etc/sudoers
cat <<EOF >>/etc/sudoers
# BEGIN OA ENTRIES
Defaults env_keep+=OA_*
# END OA ENTRIES
EOF

# set up ldap conf files
cp -p ${ldapconfdir}/{slapd,openapp-internal}.conf /etc/ldap/
chgrp openldap /etc/ldap/{slapd,openapp-internal}.conf

# set up ldapscripts config
lsconf=/etc/ldapscripts/ldapscripts.conf
sed -i '/^# BEGIN OA CONF/,/^# END OA CONF/{d}' $lsconf
cat <<EOF >>$lsconf
# BEGIN OA CONF
UIDSTART=30000
USHELL=/bin/false
UHOMES=/tmp
# END OA CONF
EOF

# set up oa-autostart init
update-rc.d oa-autostart defaults 91

# set up OA params
mkdir -p /opt/vyatta/etc/oa/params
echo 7 >/opt/vyatta/etc/oa/params/nightly_limit

# setup pam auth to allow ldap login on webgui
vyattaconf=/etc/pam.d/vyatta
cat <<EOF >$vyattaconf
session    required   pam_limits.so
auth       [success=ok ignore=ignore user_unknown=ignore default=die]  pam_securetty.so
auth       requisite  pam_nologin.so
session       required   pam_env.so readenv=1
session       required   pam_env.so readenv=1 envfile=/etc/default/locale
auth sufficient pam_ldap.so
auth required   pam_unix.so nullok_secure try_first_pass
account sufficient pam_ldap.so
account required   pam_unix.so
session	required	pam_unix.so
password sufficient pam_ldap.so
password required   pam_unix.so nullok obscure md5
EOF

# remove pam from all other services
sed -i 's/\(.*ldap\)/#\1/' /etc/pam.d/common-auth

exit 0

